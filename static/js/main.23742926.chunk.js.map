{"version":3,"sources":["components/Navigation/Drawer/Drawer.css","components/Navigation/MenuToggle/MenuToggle.css","containers/QuizList/QuizList.css","components/UI/Loader/Loader.css","components/UI/Button/Button.css","components/UI/Input/Input.css","containers/Auth/Auth.css","containers/Quiz/Quiz.css","components/ActiveQuiz/ActiveQuiz.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.css","components/FinishedQuiz/FinishedQuiz.css","hoc/Layout/Layout.css","components/UI/Backdrop/Backdrop.css","containers/QuizCreator/QuizCreator.css","components/UI/Select/Select.css","components/ActiveQuiz/AnswersList/AnswersList.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","components/UI/Loader/Loader.js","containers/QuizList/QuizList.js","components/UI/Button/Button.js","components/UI/Input/Input.js","components/UI/Select/Select.js","hoc/Auxiliary/Auxiliary.js","form/formFramework.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","store/actions/auth.js","containers/Auth/Auth.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","isAuthenticated","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","axios","create","baseURL","fetchQuizeSuccess","quiz","type","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","answers","Loader","center","QuizList","id","QuizName","name","fetchQuizes","loading","length","renderQuizes","dispatch","a","get","then","response","console","log","data","Object","keys","forEach","Button","disabled","isInvalid","valid","touched","shouldValidate","Input","inputType","invalid","htmlFor","Math","random","value","onChange","errorMessage","Select","options","option","text","Auxiliary","createControl","config","validation","validate","isValid","required","trim","validateForm","formControls","isFormValid","control","createOptionControl","number","createFormControls","question","option1","option2","option3","option4","QuizCreator","rightAnswerId","submitHandler","event","preventDefault","addQuestionHandler","questionItem","rightAnswer","createQuizQuestion","createQuizHandler","finishCreateQuiz","onChangeHandler","controlName","selectChangeHandler","target","select","onSubmit","renderControls","item","getState","post","autoLogout","time","setTimeout","logout","localStorage","removeItem","authSuccess","Auth","email","password","minLenght","loginHandler","registerHandler","validateControl","is","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","AnswerItem","ansStateValue","onAnswerClick","answer","AnswersList","ansState","ActiveQuiz","Question","answerNumber","quizLenght","FinishedQuiz","answersObj","successCount","reduce","total","quizItem","onRetry","Quiz","retryHandler","isFinished","activeQuestion","fetchQuizById","match","params","retryQuiz","QuizWrapper","quizAnswerClick","quizId","answerId","ans","timeout","window","isQuizFinished","clearTimeout","Logout","App","autoLogin","routes","path","component","React","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.23742926.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer--2Nzcl\",\"close\":\"Drawer__close--3eUiV\",\"active\":\"Drawer__active--WxScd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle--1mqO0\",\"open\":\"MenuToggle__open--1kMjG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList__QuizList--2oxZy\",\"QuizName\":\"QuizList__QuizName--16EHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Loader__center--1YZNW\",\"Loader\":\"Loader__Loader--2iSOk\",\"lds-ellipsis1\":\"Loader__lds-ellipsis1--39wLb\",\"lds-ellipsis2\":\"Loader__lds-ellipsis2--2U1t-\",\"lds-ellipsis3\":\"Loader__lds-ellipsis3--2YjFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--QI7b2\",\"error\":\"Button__error--tZCD8\",\"success\":\"Button__success--3d-85\",\"primary\":\"Button__primary--2Lss2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input--s67N0\",\"invalid\":\"Input__invalid--flTJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth--2YUr1\",\"AuthForm\":\"Auth__AuthForm--2Xb4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz__Quiz--3J8Ip\",\"QuizWrapper\":\"Quiz__QuizWrapper--2cJp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz__ActiveQuiz--1xPLH\",\"Question\":\"ActiveQuiz__Question--2AtZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem--2xulf\",\"success\":\"AnswerItem__success--17tyF\",\"error\":\"AnswerItem__error--2G-OL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz__FinishedQuiz--3-Dtz\",\"success\":\"FinishedQuiz__success--1N7XY\",\"yes\":\"FinishedQuiz__yes--25Jez\",\"error\":\"FinishedQuiz__error--34veZ\",\"no\":\"FinishedQuiz__no--20HS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop--efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator__QuizCreator--1_s5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select__Select--1rPbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--1WLwo\"};","import React from 'react'\r\nimport classes from './MenuToggle.css'\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n    if (props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle\r\n","import React from 'react'\r\nimport classes from'./Backdrop.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\r\n\r\nexport default Backdrop\r\n\r\n","import React, {Component} from 'react'\r\nimport classes from './Drawer.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nclass Drawer extends Component {\r\n    clickHandler = () => {\r\n        this.props.onClose()\r\n    }\r\n    renderLinks (links) {\r\n        return links.map((link, index) => {\r\n            return(\r\n                <li key ={index}>\r\n                    <NavLink\r\n                        to = {link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={classes.active}\r\n                        onClick={this.clickHandler}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n\r\n\r\n    }\r\n    render(){\r\n        const links = [\r\n            {to: '/', label: 'Test List', exact: true},\r\n\r\n\r\n        ]\r\n\r\n        if(this.props.isAuthenticated) {\r\n            links.push({to: '/quiz-creator', label: 'Create Test', exact: false})\r\n            links.push({to: '/logout', label: 'Logout', exact: false})\r\n        } else {\r\n            links.push({to: '/auth', label: 'Authentication', exact: false})\r\n        }\r\n        const cls = [\r\n            classes.Drawer\r\n        ]\r\n        if(!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <nav className = {cls.join(' ')}>\r\n                <ul>\r\n                    {this.renderLinks(links)}\r\n                </ul>\r\n            </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default  Drawer","import React, {Component} from 'react'\r\nimport classes from './Layout.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n    menuCloseHandler =() => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n                <Drawer\r\n                    isOpen ={this.state.menu}\r\n                    onClose ={this.menuCloseHandler}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n                <MenuToggle\r\n                    onToggle = {this.toggleMenuHandler}\r\n                    isOpen ={this.state.menu}\r\n                />\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return{\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Layout)","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://test-ce86f-default-rtdb.europe-west1.firebasedatabase.app/'\r\n    // baseURL: 'https://react-quiz-fa011.firebaseio.com/'\r\n})","import axios from '../../axios/axios-quiz'\r\nimport {\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS,\r\n    FETCH_QUIZ_SUCCESS,\r\n    QUIZ_SET_STATE,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    RETRY_QUIZ\r\n} from './actionTypes'\r\n\r\nexport function fetchQuizes() {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            await axios.get('/quizes.json').then(response => {\r\n                console.log(response.data)\r\n                const quizes = []\r\n                Object.keys(response.data).forEach((key, index) => {\r\n                    quizes.push({\r\n                        id: key,\r\n                        name: `Test ${index + 1}`\r\n                    })\r\n                })\r\n                dispatch(fetchQuizesSuccess(quizes))\r\n            })\r\n            } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart()) // изменяем лоадинг на тру\r\n        try {\r\n            const response = await axios.get(`/quizes/${quizId}.json`)\r\n            const quiz = response.data\r\n            dispatch(fetchQuizeSuccess(quiz))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e)) // уже есть\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function fetchQuizeSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\n\r\nexport function finishQuiz() {\r\n    return {\r\n        type: FINISH_QUIZ\r\n    }\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n    return {\r\n        type: QUIZ_NEXT_QUESTION,\r\n        number\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, answers) {\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        answerState,\r\n        answers\r\n    }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n        const state = getState().quiz\r\n        if (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0]\r\n            console.log('answerId', typeof answerId)\r\n            if (state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n\r\n        }\r\n        const ans = state.answers\r\n        const question = state.quiz[state.activeQuestion]\r\n        console.log('question.rightAnswerId ', question )\r\n        if (question.rightAnswer === answerId) {\r\n            if (!ans[question.id]) {\r\n                ans[question.id] = 'success'\r\n            }\r\n\r\n            dispatch(quizSetState({[answerId]: 'success'}, ans))\r\n            // this.setState({\r\n            //     answerState: {[answerId]: 'success'},//квадратные скобки потому что это ключ, без них - просто строка\r\n            //     answers: ans\r\n            // })\r\n            const timeout = window.setTimeout(() => {\r\n                if (isQuizFinished(state)) {\r\n                    dispatch(finishQuiz())\r\n                    // this.setState({\r\n                    //     isFinished: true\r\n                    // })\r\n\r\n                } else {\r\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n                    // this.setState({\r\n                    //     activeQuestion: this.state.activeQuestion + 1,\r\n                    //     answerState: {[answerId]: null}\r\n                    //\r\n                    // })\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 100)\r\n\r\n        } else {\r\n\r\n            ans[question.id] = 'error'\r\n            dispatch(quizSetState({[answerId]: 'error'}, ans))\r\n            // this.setState({\r\n            //     answerState: {[answerId]: 'error'},\r\n            //     answers: ans\r\n            // })\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function retryQuiz() {\r\n    return {\r\n        type: RETRY_QUIZ\r\n    }\r\n}\r\nfunction isQuizFinished(state) {\r\n    return state.activeQuestion + 1 === state.quiz.length\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\n\r\nexport const RETRY_QUIZ = 'RETRY_QUIZ'\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport classes from './Loader.css'\r\nconst  Loader= props => {\r\n\r\n    return (\r\n        <div className={classes.center}>\r\n            <div className={classes.Loader}>\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n\r\n","import React, {Component} from 'react'\r\nimport classes from'./QuizList.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {fetchQuizes} from '../../store/actions/quiz'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\n\r\nclass QuizList extends Component {\r\n\r\n    renderQuizes(){\r\n        return (\r\n            this.props.quizes.map(quiz => {\r\n                return (\r\n                    <li key={quiz.id}>\r\n                        <NavLink\r\n                        to={'/quiz/' + quiz.id}\r\n                        >\r\n                           <div className={classes.QuizName}>{quiz.name}</div>\r\n                        </NavLink>\r\n\r\n                    </li>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n   componentDidMount() {\r\n        this.props.fetchQuizes()\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Test List</h1>\r\n\r\n                    {this.props.loading && this.props.quizes.length !== 0\r\n                    ? <Loader />\r\n                    : <ul>\r\n                            {this.renderQuizes()}\r\n                        </ul>\r\n                    }\r\n\r\n                 </div>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react'\r\nimport classes from './Button.css'\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n\r\n    ]\r\n    return (\r\n        <button\r\n        onClick={props.onClick}\r\n        className={cls.join(' ')}\r\n        disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>)\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './Input.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\nconst  Input= props => {\r\n    const inputType = props.type || 'text'\r\n    const cls = [\r\n        classes.Input\r\n    ]\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            {\r\n                isInvalid(props)\r\n                ? <span> {props.errorMessage || 'Введите верное значение!' }</span>\r\n                : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n\r\n","import React from 'react'\r\nimport classes from './Select.css'\r\nconst Select = props => {\r\n    const htmlFor =`${props.label} + ${Math.random()}`\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                {props.options.map((option, index) => {\r\n                    return (\r\n                        <option\r\n                            key={option.value + index}\r\n                            value={option.value}\r\n\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select\r\n\r\n","const Auxiliary = props => props.children\r\nexport default Auxiliary\r\n\r\n\r\n","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value:''\r\n    }\r\n\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true\r\n\r\n    // for (let control in formControls) {\r\n    //     if (formControls.hasOwnProperty(control)) {\r\n    //         isFormValid = formControls[control].valid && isFormValid\r\n    //     }\r\n    // }\r\n\r\n    Object.keys(formControls).forEach(control => {\r\n       isFormValid = formControls[control].valid && isFormValid\r\n    })\r\n\r\n    return isFormValid\r\n}","import React, {Component} from 'react'\r\nimport classes from './QuizCreator.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Select from '../../components/UI/Select/Select'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport {connect} from 'react-redux'\r\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create'\r\n\r\nfunction createOptionControl(number){\r\n    return createControl({\r\n        label: `Option ${number}`,\r\n            errorMessage: 'Field should be not empty',\r\n        id: number\r\n    },\r\n    {\r\n        required: true\r\n    })\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n                question: createControl(\r\n                    {\r\n                        label: 'Enter the question',\r\n                        errorMessage: 'Question should be not empty'\r\n                    },\r\n                    {\r\n                        required: true\r\n                    }\r\n                ),\r\n                option1: createOptionControl(1),\r\n                option2: createOptionControl(2),\r\n                option3: createOptionControl(3),\r\n                option4: createOptionControl(4)\r\n            }\r\n}\r\nclass QuizCreator extends Component {\r\n    state = {\r\n        isFormValid: false,  // эти свойства в Redux не переносим\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n    }\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n    addQuestionHandler = event => {\r\n        event.preventDefault()\r\n\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: this.props.quiz.length + 1,\r\n            rightAnswer: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id},\r\n                ]\r\n        }\r\n\r\n\r\n        this.props.createQuizQuestion(questionItem)\r\n\r\n        this.setState({\r\n\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls()\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    createQuizHandler = async event => {\r\n        event.preventDefault()\r\n\r\n            this.setState({\r\n                isFormValid: false,\r\n                rightAnswerId: 1,\r\n                formControls: createFormControls()\r\n            })\r\n            this.props.finishCreateQuiz()\r\n\r\n\r\n\r\n    }\r\n\r\n    onChangeHandler = (value, controlName )=> {\r\n        const formControls = {...this.state.formControls} // чтобы не мутировать стэйт\r\n        const control = {...formControls[controlName]}\r\n\r\n        control.touched = true\r\n        control.value = value\r\n        control.valid = validate(control.value, control.validation)\r\n        formControls[controlName] = control\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        })\r\n    }\r\n\r\n    selectChangeHandler = event => {\r\n\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n        })\r\n\r\n    }\r\n    renderControls() {\r\n        return (\r\n            Object.keys(this.state.formControls).map((controlName, index)=> {\r\n                const control = this.state.formControls[controlName]\r\n                return (\r\n                    <Auxiliary key={controlName + index}>\r\n                        <Input\r\n\r\n                            type={control.type}\r\n                            value={control.value}\r\n                            valid={control.valid}\r\n                            touched={control.touched}\r\n                            label={control.label}\r\n                            errorMessage={control.errorMessage}\r\n                            shouldValidate={!!control.validation} // to boolean\r\n                            onChange={(event) => this.onChangeHandler(event.target.value, controlName)}\r\n                        />\r\n                        {index === 0 ?  <hr /> : null}\r\n                    </Auxiliary>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    render() {\r\n        const select = <Select\r\n            label={'Choose right answer'}\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4}\r\n            ]}\r\n\r\n        />\r\n        return(\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Test creating</h1>\r\n                    <form onSubmit={this.submitHandler}>\r\n\r\n                        {this.renderControls()}\r\n\r\n                        { select }\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                        Add question\r\n                        </Button>\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.props.quiz.length === 0}\r\n                        >\r\n                        Create Test\r\n                        </Button>\r\n\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quiz: state.create.quiz\r\n    }\r\n\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createQuizQuestion:  item => dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {\r\n    CREATE_QUIZ_QUESTION,\r\n    RESET_QUIZ_CREATION\r\n\r\n} from './actionTypes'\r\nimport axios from '../../axios/axios-quiz'\r\n\r\nexport function createQuizQuestion(item) {\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        item\r\n    }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n    return{\r\n       type: RESET_QUIZ_CREATION\r\n\r\n    }\r\n\r\n}\r\nexport function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        await axios.post('/quizes.json', getState().create.quiz)\r\n        dispatch(resetQuizCreation())\r\n    }\r\n\r\n\r\n}","import axios from '../../axios/axios-quiz'\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from './actionTypes'\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBjks3IiSfZ46duIwzKMSWetOqEphRtCIE'\r\n        if (isLogin) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBjks3IiSfZ46duIwzKMSWetOqEphRtCIE'\r\n        }\r\n        const response = await axios.post(url, authData)\r\n        const data = response.data\r\n\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(authSuccess(data.idToken))\r\n        dispatch(autoLogout(data.expiresIn))\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n            }, time * 1000)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: AUTH_LOGOUT\r\n\r\n    }\r\n}\r\n\r\nexport function autoLogin() {\r\n    return dispatch => {\r\n        const token =localStorage.getItem('token')\r\n        if(!token) {\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout())\r\n            } else {\r\n                dispatch(authSuccess(token))\r\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token: token\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport classes from'./Auth.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\n\r\nimport  is from 'is_js'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {auth} from '../../store/actions/auth'\r\n\r\n// function validateEmail(email) {\r\n//     const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n//     return re.test(String(email).toLowerCase());\r\n// }\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Enter correct Email',\r\n                valid: false,\r\n                touched: false,\r\n                validation:{\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Password',\r\n                errorMessage: 'Enter correct password',\r\n                valid: false,\r\n                touched: false,\r\n                validation:{\r\n                    required: true,\r\n                    minLenght: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, true )\r\n        // const authData = {\r\n        //     email: this.state.formControls.email.value,\r\n        //     password: this.state.formControls.password.value,\r\n        //     returnSecureToken: true\r\n        // }\r\n        // try {\r\n        //     const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBtg72uBsnU3eQof_oBaBhuEQBklIx-Eq8', authData)\r\n        //     console.log('response', response)\r\n        // } catch(e) {\r\n        //     console.log(e)\r\n        // }\r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, false )\r\n        // const authData = {\r\n        //     email: this.state.formControls.email.value,\r\n        //     password: this.state.formControls.password.value,\r\n        //     returnSecureToken: true\r\n        // }\r\n        // try {\r\n        //     const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBtg72uBsnU3eQof_oBaBhuEQBklIx-Eq8', authData)\r\n        //     console.log('response', response)\r\n        // } catch(e) {\r\n        //     console.log(e)\r\n        // }\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n\r\n    }\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n        let isValid = true\r\n\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n\r\n        if (validation.email) {\r\n           isValid = is.email(value) && isValid\r\n        }\r\n\r\n        if (validation.minLenght) {\r\n            isValid = value.length >= validation.minLenght && isValid\r\n        }\r\n\r\n\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n\r\n        const formControls = {...this.state.formControls} // чтобы не мутировать стэйт\r\n        const control = {...formControls[controlName]}\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n        formControls[controlName] = control //обновляем после валидации\r\n\r\n        let isFormValid = true\r\n        Object.keys(formControls).forEach((name) =>{\r\n             isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n        this.setState({\r\n            formControls,\r\n            isFormValid\r\n\r\n        })\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    errorMessage={control.errorMessage}\r\n                    shouldValidate={!!control.validation} // to boolean\r\n                    onChange={(event) => this.onChangeHandler(event, controlName)}\r\n                />\r\n            )\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Authenticate Yourself</h1>\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n                        {this.renderInputs()}\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)\r\n\r\n\r\n","import React from 'react'\r\nimport classes from './AnswerItem.css'\r\n\r\nconst AnswerItem = props => {\r\n\r\n    const cls = [classes.AnswerItem]\r\n    if (props.ansStateValue) {\r\n        cls.push(classes[props.ansStateValue])\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className={cls.join(' ')}\r\n            onClick={() => props.onAnswerClick(props.answer.id)}\r\n        >\r\n            {props.answer.text}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from './AnswersList.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\nconst AnswersList = props => (\r\n\r\n    <ul className={classes.AnswersList}>\r\n        {props.answers.map((answer, index) =>{\r\n            return (\r\n                <AnswerItem\r\n                    key = {index}\r\n                    answer={answer}\r\n                    onAnswerClick = {props.onAnswerClick}\r\n                    ansStateValue= {props.ansState ? props.ansState[answer.id] : null}\r\n                />\r\n\r\n            )\r\n        })}\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList","import React from 'react'\r\nimport classes from './ActiveQuiz.css'\r\nimport AnswersList from './AnswersList/AnswersList'\r\nconst ActiveQuiz = props => (\r\n    <div className={classes.ActiveQuiz}>\r\n        <p className={classes.Question}>\r\n            <span>\r\n                <strong>\r\n                    {props.answerNumber}.\r\n                </strong>&nbsp;\r\n                {props.question}\r\n            </span>\r\n            <small>\r\n                {props.answerNumber} of {props.quizLenght}\r\n            </small>\r\n        </p>\r\n\r\n        <ul>\r\n            <AnswersList\r\n                answers ={props.answers}\r\n                onAnswerClick = {props.onAnswerClick}\r\n                ansState = {props.ansState}\r\n\r\n            />\r\n        </ul>\r\n\r\n    </div>\r\n)\r\n\r\n\r\n\r\nexport default ActiveQuiz\r\n","import React from 'react'\r\nimport classes from './FinishedQuiz.css'\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst FinishedQuiz = props => {\r\n    console.log(\"answers\", props.answersObj)\r\n    const successCount = Object.keys(props.answersObj).reduce((total, key) => {\r\n        if (props.answersObj[key] === 'success'){\r\n            total++\r\n        }\r\n        return total\r\n    }, 0)\r\n\r\n    return(\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.answersObj[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                         classes[props.answersObj[quizItem.id]]\r\n                    ]\r\n\r\n                    return (\r\n                        <li\r\n                            key = {index}\r\n                        >\r\n                            <strong>{index + 1}</strong>.&nbsp;\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')} />\r\n\r\n                        </li>\r\n                    )\r\n                }) }\r\n            </ul>\r\n\r\n            <p> Right {successCount} of {props.quiz.length}</p>\r\n            <div>\r\n                <Button onClick={props.onRetry} type =\"primary\">Retry</Button>\r\n                <Link to={'/'}>\r\n                    <Button  type =\"success\">Go to test list</Button>\r\n                </Link>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz","import React, {Component} from 'react'\r\nimport classes from './Quiz.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from '../../store/actions/quiz'\r\n\r\nclass Quiz extends Component {\r\n\r\n\r\n    retryHandler = () => {\r\n        this.setState({\r\n            isFinished: false,\r\n            activeQuestion: 0,\r\n            answerState: null,\r\n            answers: {}\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Answer the Questions</h1>\r\n                    {\r\n                        this.props.loading || !this.props.quiz\r\n                            ? <Loader/>\r\n                            : this.props.isFinished\r\n                            ?\r\n                            <FinishedQuiz\r\n                                answersObj={this.props.answers}\r\n                                quiz={this.props.quiz}\r\n                                onRetry={this.props.retryQuiz}\r\n                            />\r\n                            :\r\n                            <ActiveQuiz\r\n                                answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                                question={this.props.quiz[this.props.activeQuestion].question}\r\n                                onAnswerClick={this.props.quizAnswerClick}\r\n                                quizLenght={this.props.quiz.length}\r\n                                answerNumber={this.props.activeQuestion + 1}\r\n                                ansState={this.props.answerState}\r\n                            />\r\n                    }\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        answers: state.quiz.answers,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../store/actions/auth'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.logout()\r\n    }\r\n    render() {\r\n        return <Redirect to={'/'} />\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Logout)\r\n","import React from 'react'\nimport Layout from './hoc/Layout/Layout'\nimport QuizList from './containers/QuizList/QuizList'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport Auth from './containers/Auth/Auth'\nimport Quiz from './containers/Quiz/Quiz'\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport Logout from './components/Logout/Logout'\nimport {autoLogin} from './store/actions/auth'\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.autoLogin()\n    }\n\n    render() {\n        let routes = (\n            <Switch>\n                <Route path=\"/auth\" component={Auth}/>\n                <Route path=\"/quiz/:id\" component={Quiz}/>\n                <Route path=\"/\" exact component={QuizList}/>\n                <Redirect to=\"/\"/>\n            </Switch>\n        )\n\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>\n                    <Route path=\"/quiz-creator\" component={QuizCreator}/>\n                    <Route path=\"/quiz/:id\" component={Quiz}/>\n                    <Route path=\"/logout\" component={Logout}/>\n                    <Route path=\"/\" exact component={QuizList}/>\n                    <Redirect to=\"/\"/>\n                </Switch>\n            )\n        }\n        return (\n            <Layout>\n                 {routes}\n            </Layout>\n        )\n\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticated: !!state.auth.token\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        autoLogin: () => dispatch(autoLogin())\n    }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n//когда обернули в коннект пропала ф-я роутера, поэтому оборач в визроутер\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZ_SUCCESS,\r\n    QUIZ_SET_STATE,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    RETRY_QUIZ\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    answers: {},\r\n    quiz: null\r\n\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state, loading: false, error: action.error\r\n            }\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quiz: action.quiz\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state, answerState: action.answerState, answers: action.answers\r\n            }\r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state, isFinished: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION:\r\n            return {\r\n                ...state, activeQuestion: action.number, answerState: null\r\n            }\r\n        case RETRY_QUIZ:\r\n            return {\r\n                ...state, isFinished: false, activeQuestion: 0, answerState: null, answers: {}\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {\r\n    CREATE_QUIZ_QUESTION,\r\n    RESET_QUIZ_CREATION\r\n\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\nexport default function createReducer (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n            case RESET_QUIZ_CREATION:\r\n                return {\r\n                    ...state,\r\n                    quiz: []\r\n                }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state, token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state, token: null\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport quizReducer from './quiz'\r\nimport createReducer from './create'\r\nimport authReducer from './auth'\r\n\r\nexport default combineReducers( {\r\n    quiz: quizReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)\nReactDOM.render(\n   <Provider store = {store}>\n      <React.StrictMode>\n          <BrowserRouter>\n                <App />\n          </BrowserRouter>\n      </React.StrictMode>\n   </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}